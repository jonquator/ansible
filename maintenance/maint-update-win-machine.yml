---
##############################################################################
## Play 1   Search-only, return list of found updates (if any).
##############################################################################
- hosts: all
  become: true
  gather_facts: no
  tasks:
    - name: Search for updates (Security, Critical, Rollups)
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - UpdateRollups
        state: searched
      register: list_of_found_updates

    - name: Show found updates (if any)
      debug:
        var: list_of_found_updates

##############################################################################
### Play 2   Send update info to Telegram for each host
##############################################################################
- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    telegram_message_template: |
      Host "{{ inventory_hostname }}" has found "{{ list_of_found_updates.found_update_count }}" updates.

  tasks:
    - name: Prepare and send Telegram notification for each host
      community.general.telegram:
        token: "{{ telegram_bot_token }}"
        api_args:
          chat_id: "{{ telegram_chat_id }}"
          parse_mode: "plain"
          text: |
            Host "{{ hostvars[item].inventory_hostname }}" found "{{ hostvars[item].list_of_found_updates.found_update_count }}" updates:
            {% for update in hostvars[item].list_of_found_updates.updates %}
              - {{ update.title }}
            {% endfor %}
          disable_web_page_preview: true
          disable_notification: false
      with_items: "{{ groups['windows'] }}"
      when: hostvars[item].list_of_found_updates.found_update_count > 0 and hostvars[item].list_of_found_updates.found_update_count != ''
      ignore_errors: yes
      ignore_unreachable: yes

    - name: Send summary notification if no updates found for any host
      community.general.telegram:
        token: "{{ telegram_bot_token }}"
        api_args:
          chat_id: "{{ telegram_chat_id }}"
          parse_mode: "plain"
          text: "All hosts have been checked. No updates found."
          disable_web_page_preview: true
          disable_notification: false
      when: "'0' in [hostvars[item].list_of_found_updates.found_update_count for item in groups['windows']]"
      ignore_errors: yes

##############################################################################
#### Play 3    Install updates when install_updates is true
##############################################################################
- hosts: all
  become: true
  gather_facts: no
  tasks:
    - block:
        - name: Install all security, critical, and rollup updates
          win_updates:
            category_names:
              - SecurityUpdates
              - CriticalUpdates
              - UpdateRollups
            reboot: false  # No se reinicia autom√°ticamente
          register: updates_installed
          when: install_updates == 'true'

        - name: Check if updates were installed
          debug:
            var: updates_installed
          when: install_updates == 'true'

        - name: Notify if reboot is required for host
          community.general.telegram:
            token: "{{ telegram_bot_token }}"
            api_args:
              chat_id: "{{ telegram_chat_id }}"
              parse_mode: "plain"
              text: "Host '{{ inventory_hostname }}' requires a reboot to complete the updates."
              disable_web_page_preview: true
              disable_notification: false
          when: updates_installed.reboot_required == true

      rescue:
        - name: Log failure if updates couldn't be installed
          debug:
            msg: "Failed to install updates on {{ inventory_hostname }}"
